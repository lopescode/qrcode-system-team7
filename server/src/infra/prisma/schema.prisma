// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Table {
  id          Int     @id @default(autoincrement())
  number      Int     @unique
  isAvailable Boolean @default(true)
  orders      Order[]
}

model CustomerPhone {
  id          Int      @id @default(autoincrement())
  countryCode String
  areaCode    String
  phoneNumber String   @unique
  isMain      Boolean  @default(false)
  customer    Customer @relation(fields: [customerId], references: [id])
  customerId  Int
}

model CustomerAddress {
  id            Int      @id @default(autoincrement())
  streetAddress String
  complement    String?
  neighborhood  String
  city          String
  state         String
  country       String
  postalCode    String
  isMain        Boolean  @default(false)
  customer      Customer @relation(fields: [customerId], references: [id])
  customerId    Int
}

model Customer {
  id        Int               @id @default(autoincrement())
  cpf       String            @unique
  password  String
  firstName String
  lastName  String
  phones    CustomerPhone[]
  addresses CustomerAddress[]
  orders    Order[]
}

model ProductIngredient {
  id          Int                    @id @default(autoincrement())
  name        String                 @unique
  description String?
  products    IngredientsOnProduct[]
}

model IngredientsOnProduct {
  product      Product           @relation(fields: [productId], references: [id])
  productId    Int
  ingredient   ProductIngredient @relation(fields: [ingredientId], references: [id])
  ingredientId Int
  createdAt    DateTime          @default(now())

  @@id([productId, ingredientId])
}

model ProductCategory {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  imageUrl    String
  description String
  products    Product[]
}

model Product {
  id          Int                    @id @default(autoincrement())
  name        String                 @unique
  description String
  price       String
  imageUrl    String
  category    ProductCategory        @relation(fields: [categoryId], references: [id])
  categoryId  Int
  orders      ProductsOnOrder[]
  ingredients IngredientsOnProduct[]
}

model ProductsOnOrder {
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  quantity  Int

  @@id([productId, orderId])
}

enum PaymentStatus {
  PENDING
  PAID
}

model Order {
  id            Int               @id @default(autoincrement())
  createdAt     DateTime          @default(now())
  price         String
  paymentStatus PaymentStatus
  customer      Customer?         @relation(fields: [customerId], references: [id])
  customerId    Int?
  table         Table?            @relation(fields: [tableId], references: [id])
  tableId       Int?
  products      ProductsOnOrder[]
}
